library(rJava)
library(RWekajars)
java version
Java
install.packages("RWeka",type="source")
install.packages("RWeka",type="source")
sudo R CMD javareconf
library(rJava)
.jinit()
Sys.setenv(LD_LIBRARY_PATH
)
Sys.getenv(LD_LIBRARY_PATH
)
install.packages("xlsxjars",dependencies = T)
library(xlsxjars)
library(rJava)
.jinit()
install.packages("RWeka",type="source")
Sys.getenv(LD_LIBRARY_PATH)
Sys.getenv(LD_LIBRARY_PATH)
Sys.setenv(LD_LIBRARY_PATH)=/Library/Java/JavaVirtualMachines/jdk1.8.0_65.jdk/Contents/Home/jre/lib/server
Sys.setenv(LD_LIBRARY_PATH)="/Library/Java/JavaVirtualMachines/jdk1.8.0_65.jdk/Contents/Home/jre/lib/server"
Sys.getenv("DYLD_FALLBACK_LIBRARY_PATH")
Sys.setenv("DYLD_FALLBACK_LIBRARY_PATH")="/Library/Java/JavaVirtualMachines/jdk1.8.0_65.jdk/Contents/Home/jre/lib/server:/Library/Frameworks/R.framework/Resources/lib:/Users/ihuangyiran/lib:/usr/local/lib:/usr/lib::"
Sys.setenv("DYLD_FALLBACK_LIBRARY_PATH")="/Library/Java/JavaVirtualMachines/jdk1.8.0_65.jdk/Contents/Home/jre/lib/server:/Library/Frameworks/R.framework/Resources/lib:/Users/ihuangyiran/lib:/usr/local/lib:/usr/lib::"
Sys.setenv(DYLD_FALLBACK_LIBRARY_PATH="/Library/Java/JavaVirtualMachines/jdk1.8.0_65.jdk/Contents/Home/jre/lib/server:/Library/Frameworks/R.framework/Resources/lib:/Users/ihuangyiran/lib:/usr/local/lib:/usr/lib::")
Sys.setenv(LD_LIBRARY_PATH="/Library/Java/JavaVirtualMachines/jdk1.8.0_65.jdk/Contents/Home/jre/lib/server:/Lib")
library(rJava)
.jinit()
install.packages("RWeka")
library("ggplot2")
library("ggmap")
library("Matrix")
library("arules")
library("grid")
library("arulesViz")
library("C50")
library("data.table")
shoppingData= read.transactions("scottish-supermarket.csv",format ="basket", sep=",", skip=1)
itemFrequencyPlot(shoppingData,topN=100,type="absolute")
rules=apriori(shoppingData,parameter = list(supp=0.001,conf=0.8))
r=inspect(rules)
rules=apriori(shoppingData,parameter = list(supp=0.01,conf=0.8))
r=inspect(rules)
inspect(rules)
rules=apriori(shoppingData,parameter = list(supp=0.005,conf=0.8))
inspect(rules)
rules=apriori(shoppingData,parameter = list(supp=0.002,conf=0.8))
inspect(rules)
rules[lhs]
rules$lhs
rules[1]
View(rules[1])
rules<-sort(rules, decreasing=TRUE,by="confidence")
inspect(rules)
rules$lhs
rules[1]
rules[1:2]
install.packages("gtrendsR", dependencies = T)
flu=read.csv("./Datensets/googleflutrends.txt")
View(flu)
flu=data.table(read.csv("./Datensets/googleflutrends.txt"))
library(data.table)
library(ggplot2)
flu=data.table(read.csv("./Datensets/googleflutrends.txt"))
flu_BWUndDate=flu[,c(Date,Baden.Württemberg)]
flu_BWUndDate=flu[,Baden.Württemberg,Date]
View(flu_BWUndDate)
length(flu_BWUndDate[is.na(Baden.Württemberg),Date])
flu_BWUndDate[which(is.na(flu_BWUndDate&Baden.Württemberg))]=null
flu_BWUndDate[which(is.na(flu_BWUndDate&Baden.Württemberg))]=NULL
flu_BWUndDate[which(is.na(flu_BWUndDate&Baden.Württemberg))]=0
flu_BWUndDate=flu[,Baden.Württemberg,Date]
flu_BWUndDate[which(is.na(flu_BWUndDate&Baden.Württemberg))]=0
flu_BWUndDate[which(is.na(flu_BWUndDate$Baden.Württemberg))]=0
flu_BWUndDate=flu[,Baden.Württemberg,Date]
flu_BWUndDate[which(is.na(flu_BWUndDate$Baden.Württemberg))]=NULL
flu_BWUndDate[which(is.na(flu_BWUndDate$Baden.Württemberg))]
flu_BWUndDate$Baden.Württemberg[which(is.na(flu_BWUndDate$Baden.Württemberg))]=0
plot(flu_BWUndDate)
gconnect("ihuangyiran@hotmail.com","hlr3983896")
library(gtrendsR)
gconnect("ihuangyiran@hotmail.com","hlr3983896")
gconnect("ihuangyiran@hotmail.com","hlr3983896")
flu=data.table(read.csv("./Datensets/googleflutrends.txt"))
flu_BWUndDate=flu[,Baden.Württemberg,Date]
flu_BWUndDate$Baden.Württemberg[which(is.na(flu_BWUndDate$Baden.Württemberg))]=0
plot(flu_BWUndDate)
flu_BWUndDate$Baden.Württemberg[which(is.na(flu_BWUndDate$Baden.Württemberg))]=sum(flu_BWUndDate$Baden.Württemberg)/length(flu_BWUndDate$Baden.Württemberg)
plot(flu_BWUndDate)
trend_BW=gtrends("Cold Symptoms", geo=c("DE-BW"))
trend_BW=gtrends("Cold Symptoms", geo=c("DE-BW"), start_date = "2015-05-01", end_date = "2016-05-01")
ggplot(data=flu_BWUndDate, aes(x=Date, y=Baden.Württemberg, group = 1)) +
geom_line(size = 0.5)
lm
shopping=data.table(read.csv(./Datensets/shopping.csv))
shopping=data.table(read.csv("./Datensets/shopping.csv"))
View(shopping)
m=lm(advertisment~shopping.time+turnover,shopping)
m=lm(advertisement~shopping.time+turnover,shopping)
shopping[which(shopping$advertisement==online)]
shopping[which(shopping$advertisement=="online")]
shopping[which(shopping$advertisement=="online")]=1
shopping=data.table(read.csv("./Datensets/shopping.csv"))
shopping$advertisement[which(shopping$advertisement=="online")]=1
shopping=data.table(read.csv("./Datensets/shopping.csv"))
shopping$advertisement[which(shopping$advertisement=="online")]="1"
shopping$advertisement=as.numeric(shopping$advertisement)
shopping=data.table(read.csv("./Datensets/shopping.csv"))
shopping$advertisement=as.numeric(shopping$advertisement)
m=lm(advertisement~shopping.time+turnover,shopping)
predictions=predict(m,shopping)
predictions
summary(m)
shopping=data.table(read.csv("./Datensets/shopping.csv"))
m=lm(turnover~advertisement+shopping.time,shopping)
predictions=predict(m,shopping)
summary(m)
m=lm(turnover~advertisement,shopping)
summary(m)
m1=lm(turnover~advertisement,shopping)
m2=lm(turnover~shopping.time,shopping)
m3=lm(turnover~advertisement+shopping.time,shopping)
summary(m1)
summary(m2)
summary(m3)
trend_BW=gtrends("Cold Symptoms", geo=c("DE-BW"), start_date = "2015-05-01", end_date = "2016-05-01")
trend_BW=gtrends(c(Cold,Symptoms), geo=c("DE-BW"), start_date = "2015-05-01", end_date = "2016-05-01")
trend_BW=gtrends(c("Cold","Symptoms"), geo=c("DE-BW"), start_date = "2015-05-01", end_date = "2016-05-01")
View(trend_BW)
trend_BW
data("countries")
d=data("countries")
d
plot(d)
plot(trend_BW)
View(trend_BW)
trend_BW
install.packages("markovchain", dependencies = TRUE)
install.packages("markovchain", dependencies = TRUE)
install.packages("Bayesm", denpendencies=TRUE)
install.packages("bayesm", denpendencies=TRUE)
install.packages("bayesm", dependencies=TRUE)
install.packages("NMF", dependencies = TRUE)
ls
read.csv("./Datensets/whiskyconsumption.csv")
whiskyconsumption=read.csv("./Datensets/whiskyconsumption.csv")
View(whiskyconsumption)
View(whiskyconsumption)
wConsumptionFittedML=markovchainFit(data = whiskyconsumption$x)
library(markovchain)
wConsumptionFittedML=markovchainFit(data = whiskyconsumption$x)
View(wConsumptionFittedML$estimate)
wConsumptionFittedML$estimate
plot(wConsumptionFittedML)
show(markovchain)
whiskyArt=c("ardbeg","junglivet","laphroaig")
whiskyMatrix= matrix(data= c(0.529,0.239,0.221,
0.049,0.815,0.136,
0.322,0.213,0.465),
byrow = TRUE, nrow=3,
dimnames = list(whiskyArt,whiskyArt)
)
View(whiskyMatrix)
mcWhisky=new("markovchain", states(whiskyArt), byrow = TRUE,
transitionMatrix = whiskyMatrix, name = whisky)
mcWhisky=new("markovchain", states =whiskyArt, byrow = TRUE,
transitionMatrix = whiskyMatrix, name = whisky)
mcWhisky=new("markovchain", states =whiskyArt, byrow = TRUE,
transitionMatrix = whiskyMatrix, name = "whisky")
library(markovchain)
mcWhisky=new("markovchain", states =whiskyArt, byrow = TRUE,
transitionMatrix = whiskyMatrix, name = "whisky")
weatherStates <- c("sunny", "cloudy", "rain")
weatherMatrix <- matrix(data = c(0.70, 0.2, 0.1, 0.3, 0.4, 0.3,0.2, 0.45, 0.35),
byrow = TRUE, nrow = 3,
dimnames = list(weatherStates, weatherStates))
mcWeather <- new("markovchain", states = weatherStates, byrow = TRUE,
transitionMatrix = weatherMatrix, name = "Weather")
mcWhisky<-new("markovchain", states =whiskyArt, byrow = TRUE,
transitionMatrix = whiskyMatrix, name = "whisky")
mcWhisky<-new("markovchain", states =whiskyArt, byrow = TRUE,
transitionMatrix = whiskyMatrix, name = "whisky")
View(weatherMatrix)
View(whiskyMatrix)
whiskyMatrix= matrix(data= c(0.54,0.24,0.22,
0.05,0.81,0.14,
0.32,0.21,0.47),
byrow = TRUE, nrow=3,
dimnames = list(whiskyArt,whiskyArt))
mcWhisky<-new("markovchain", states =whiskyArt, byrow = TRUE,
transitionMatrix = whiskyMatrix, name = "whisky")
plot(mcWhisky)
steadyStates(mcWhisky)
data=data(Scotch)
data(Scotch)
library(bayesm)
data=data(Scotch)
data("Scotch")
View(Scotch)
class(Scotch)
e.r=nmf(Scotch,5,nrun=10)
library(NMF)
e.r=nmf(Scotch,5,nrun=10)
plot(e.r)
e.r=nmf(Scotch,5:8,nrun=10)
plot(e.r)
t=table(Scotch[,1])
View(Scotch)
number.whiskies = apply(Scotch,MARGIN=1,FUN=sum)
View(Scotch)
table(number.whiskies[])
library("ggmap")
library("ggplot2")
library("ggmap")
library("Grid")
install.packages("Grid",dependencies = TRUE)
library("Grid")
library("streamR")
install.packages("streamR", dependencies = TRUE)
library("streamR")
library("Rcurl")
install.packages("Rcurl", dependencies = TRUE)
install.packages("RCurl", dependencies = TRUE)
install.packages("RCurl", dependencies = TRUE)
library("RCurl")
library("bitops")
library("RCurl")
library("streamR")
library("rjson")
library("streamR")
library("stringr")
library("ROAuth")
library("ROAuth")
factor1 <- factor(c("1","2","4"), levels = ("rare","median","well-done"))
factor1 <- factor(c("1","2","4"), levels = ("rare","median","well-done"))
factor1 <- factor(c("1","2","4" levels = ("rare","median","well-done"))
factor1 <- factor(c("1","2","4") levels = ("rare","median","well-done"))
factor1 <- factor(c("1","2","4"), levels = ("rare","median","well-done"))
factor1 <- factor(c("1","2","4"), levels = c("rare","median","well-done"))
factor§
factor1
factor1[1]
factor1 <- factor("1","2","4", levels = c("rare","median","well-done"))
factor1[1]
factor1
factor1 <- factor(c("1","2","4"), levels = c("rare","median","well-done"))
factor1 <- factor(c("median","well-done","rare"), levels = c("rare","median","well-done"))
factor1
unclassFactor1 = unclass(factor1)
unclassFactor1
class(unclassFactor1)
unclassFactor1[1]
str(countries)
data = data.frame(nums = 1:6)
data
data$new = log(data$nums)*2
data
data$new = NULL
data
data$ramdon.nums = sample(6)
data
data$ramdon.chars = letters(sample(6\))
data$ramdon.chars = letters(sample(6))
data$ramdon.chars = letters[sample(6)]
data
?subset
?apply
x <- cbind(x1 =3, x2 = c(4:1, 2:5))
x
subset(x, x1>1|x2<3,c(x1,x2))
subset(x, x1>1|x2<3,select(x1,x2))
subset(x, x1>1|x2<3,select = c(x1,x2))
subset(x,x2<3,select = c(x1,x2))
subset(x,x$x2<3,select = c(x1,x2))
subset(x,x.x2<3,select = c(x1,x2))
x
class(x)
subset(x,x[,2]>3,select = c(x1,x2))
dimnames(x)[[1]] <= letters[1:8]
x
dimnames(x)[[1]] <- letters[1:8]
x
apply(x, 2 ,mean, trim = .2)
apply(x, 1 ,mean, trim = .2)
apply(x, c(1,2) ,mean, trim = .2)
?replicate
?apply
data = data.frame(n = c(10,100,5,mean = c(5,5,10), sd = c(1,2,1))
)
data
data = data.frame(n = c(10,100,5),mean = c(5,5,10), sd = c(1,2,1))
data
mlpy(data,rnorm)
library("dply")
library("plyr")
mlpy(data,rnorm)
mlply(data,rnorm)
data <- read.table("/Users/ihuangyiran/Documents/Workplace_Maven/CorrelationWindow/data/war2.data");
View(data)
data <- read.table("/Users/ihuangyiran/Documents/Workplace_Maven/CorrelationWindow/data/war2.data",header = FALSE,sep=',');
View(data)
plot(data)
View(data)
data <- read.table("/Users/ihuangyiran/Documents/Workplace_Maven/CorrelationWindow/data/war2.data",header = FALSE,sep=',');
plot(data)
names(data) <- c("cor","win")
plot(data)
data <- read.table("/Users/ihuangyiran/Documents/Workplace_Maven/CorrelationWindow/data/war2.data",header = FALSE,sep=',');
names(data) <- c("cor","win")
plot(data)
data <- read.table("/Users/ihuangyiran/Documents/Workplace_Maven/CorrelationWindow/data/war2.data",header = FALSE,sep=',');
names(data) <- c("cor","win")
plot(data)
data <- read.table("/Users/ihuangyiran/Documents/Workplace_Maven/CorrelationWindow/data/war2.data",header = FALSE,sep=',');
names(data) <- c("cor","win")
plot(data)
data <- read.table("/Users/ihuangyiran/Documents/Workplace_Maven/CorrelationWindow/data/war2.data",header = FALSE,sep=',');
names(data) <- c("cor","win")
plot(data)
data <- read.table("/Users/ihuangyiran/Documents/Workplace_Maven/CorrelationWindow/data/war2.data",header = FALSE,sep=',');
names(data) <- c("cor","win")
plot(data)
data <- read.table("/Users/ihuangyiran/Documents/Workplace_Maven/CorrelationWindow/data/war2.data",header = FALSE,sep=',');
names(data) <- c("cor","win")
plot(data)
data <- read.table("/Users/ihuangyiran/Documents/Workplace_Maven/CorrelationWindow/data/war2.data",header = FALSE,sep=',');
names(data) <- c("cor","win")
plot(data)
data <- read.table("/Users/ihuangyiran/Documents/Workplace_Maven/CorrelationWindow/data/war2.data",header = FALSE,sep=',');
names(data) <- c("cor","win")
plot(data)
library(ggplot2)
install.packages("lazyeval")
install.packages("lazyeval")
library(ggplot2)
library("ggplot2")
library("lazyval")
library("ggmap")
install.packages("ggmap")
install.packages("ggmap")
library("ggmap")
library("ggplot2")
library("ggmap")
map.KIT = qmap(location = "KIT", zoom = 18, source = "osm")
getwd()
setwd()
setwd("./Modelling-with-R-Exercise/Exercise3/")
data.whiskies = read.csv("../Dataset/whiskies.csv")
str(data.whiskies)
View(data.whiskies)
data.whiskies.bodyAndSmoky = data.whiskies[,c(body, "Smoky")]
data.whiskies.bodyAndSmoky = data.whiskies[,c("body", "Smoky")]
data.whiskies.bodyAndSmoky = data.whiskies[,c("body", "smoky")]
data.whiskies.bodyAndSmoky = data.whiskies[,c("Body", "Smoky")]
ggplot(data.whiskies.bodyAndSmoky, aes(x = body, y = smoky, color = "red")) + geom_point()
ggplot(data.whiskies.bodyAndSmoky, aes(x = Body, y = Smoky, color = "red")) + geom_point()
library("plyr")
data.whiskies.bodyAndSmoky = ddply(data.whiskies.bodyAndSmoky, "Smoky", transform, Smoky.sum(Smoky) )
data.whiskies.bodyAndSmoky = ddply(data.whiskies.bodyAndSmoky, "Smoky", transform, Smoky.sum = sum(Smoky) )
str(data.whiskies.bodyAndSmoky)
ggplot(data.whiskies.bodyAndSmoky, aes(x = Body, y = Smoky, color = "red", size = Somky.sum)) + geom_point()
ggplot(data.whiskies.bodyAndSmoky, aes(x = Body, y = Smoky, color = "red", size = Smoky.sum)) + geom_point()
data.whiskies.bodyAndSmoky = ddply(data.whiskies.bodyAndSmoky, c(Body, Smoky), transform, Sum = sum(Smoky) )
data.whiskies.bodyAndSmoky = ddply(data.whiskies.bodyAndSmoky, c("Body", "Smoky"), transform, Sum = sum(Smoky) )
str(data.whiskies.bodyAndSmoky)
data.whiskies.bodyAndSmoky$Smoky.sum = NULL
ggplot(data.whiskies.bodyAndSmoky, aes(x = Body, y = Smoky, color = "red", size = Smoky.sum)) + geom_point()
ggplot(data.whiskies.bodyAndSmoky, aes(x = Body, y = Smoky, color = "red", size = Sum)) + geom_point()
plot(data.whiskies)
summary(data.whiskies)
boxplot(data.whiskies[,c("Body","Smoky")])
boxplot(data.whiskies.bodyAndSmoky)
view(data.whiskies)
show(data.whiskies)
View(data.whiskies)
data.whiskies.bodyAndSmoky = data.whiskies.bodyAndSmoky[c(!(data.whiskies.bodyAndSmoky %in% c(NULL))),]
data.whiskies.bodyAndSmoky = rbind(data.whiskies.bodyAndSmoky, c(NULL,NULL, 3))
View(data.whiskies.bodyAndSmoky)
data.whiskies.bodyAndSmoky = rbind(data.whiskies.bodyAndSmoky, c(NULL,NULL,3))
View(data.whiskies.bodyAndSmoky)
data.whiskies.bodyAndSmoky = rbind(data.whiskies.bodyAndSmoky, c(NULL,NULL,NULL))
View(data.whiskies.bodyAndSmoky)
data.whiskies.bodyAndSmoky = rbind(data.whiskies.bodyAndSmoky, c(NULL,NULL,2))
View(data.whiskies.bodyAndSmoky)
a = c(NULL, NULL, 2)
a
a = c(NA, NA, 2)
a
data.whiskies.bodyAndSmoky = rbind(data.whiskies.bodyAndSmoky, c(NA,NA,2))
View(data.whiskies.bodyAndSmoky)
data.whiskies.bodyAndSmoky = data.whiskies.bodyAndSmoky[c(!(data.whiskies.bodyAndSmoky %in% c(NA))),]
View(data.whiskies.bodyAndSmoky)
data.whiskies.bodyAndSmoky = data.whiskies.bodyAndSmoky[c(!(data.whiskies.bodyAndSmoky$Body %in% c(NA))),]
View(data.whiskies.bodyAndSmoky)
data.whiskies.bodyAndSmoky = data.whiskies[,c("Body", "Smoky")]  #get attribute smoky and body
data.whiskies.bodyAndSmoky = rbind(data.whiskies.bodyAndSmoky, c(NA,2,2)) #for test
data.whiskies.bodyAndSmoky = rbind(data.whiskies.bodyAndSmoky, c(1,NA,2)) #for test
data.whiskies.bodyAndSmoky = ddply(data.whiskies.bodyAndSmoky, c("Body", "Smoky"), transform, Sum = sum(Smoky) )
data.whiskies.bodyAndSmoky = data.whiskies.bodyAndSmoky[c(!(data.whiskies.bodyAndSmoky$Body %in% c(NA))),]
data.whiskies.bodyAndSmoky = data.whiskies.bodyAndSmoky[c(!(data.whiskies.bodyAndSmoky$Smoky %in% c(NA))),]
data.whiskies.bodyAndSmoky$Sum = NULL
data.whiskies.bodyAndSmoky.scale = scale(data.whiskies.bodyAndSmoky)
summary(data.whiskies.bodyAndSmoky.scale)
summary(data.whiskies.bodyAndSmoky)
ssplot(data.whiskies.bodyAndSmoky.scale)
ssplot <- function(data, maxCluster = 9) {
SSw <- vector()
for(i in 2:maxCluster) {
SSw[i] <- sum(kmeans(data, centers = i)$withness)
}
plot(1:maxCluster, SSw, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares")
}
ssplot(data.whiskies.bodyAndSmoky.scale)
ssplot(data.whiskies.bodyAndSmoky)
ssplot(data.whiskies.bodyAndSmoky)
View(data.whiskies.bodyAndSmoky.scale)
ssplot <- function(data, maxCluster = 9) {
SSw <- vector()
for(i in 2:maxCluster) {
SSw[i] <- sum(kmeans(data, centers = i)$withness)
SSw[i]
}
plot(1:maxCluster, SSw, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares")
}
ssplot(data.whiskies.bodyAndSmoky)
ssplot <- function(data, maxCluster = 9) {
SSw <- vector()
for(i in 2:maxCluster) {
SSw[i] <- sum(kmeans(data, centers = i)$withness)
print("I am a test")
SSw[i]
}
plot(1:maxCluster, SSw, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares")
}
ssplot(data.whiskies.bodyAndSmoky)
ssplot <- function(data, maxCluster = 9) {
SSw <- vector()
for(i in 2:maxCluster) {
SSw[i] <- sum(kmeans(data, centers = i)$withness)
print(SSw[i])
}
plot(1:maxCluster, SSw, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares")
}
ssplot(data.whiskies.bodyAndSmoky)
kmeans(data.whiskies.bodyAndSmoky, centers = 2)$withness
kmeans(data.whiskies.bodyAndSmoky, centers = 4)$withness
kmeans(data.whiskies.bodyAndSmoky, centers = 4)$withiness
kmeans(data.whiskies.bodyAndSmoky, centers = 4)$withinss
ssplot <- function(data, maxCluster = 9) {
SSw <- vector()
for(i in 2:maxCluster) {
SSw[i] <- sum(kmeans(data, centers = i)$withinss)
}
plot(1:maxCluster, SSw, type = "b", xlab = "Number of Clusters", ylab = "Within groups sum of squares")
}
ssplot(data.whiskies.bodyAndSmoky)
ssplot(data.whiskies.bodyAndSmoky.scale)
fit = kmeans(data.whiskies.bodyAndSmoky.scale, centers = 6)
str(fit)
str(fit)
fit2 = kmeans(data.whiskies.bodyAndSmoky.scale, centers = 2)
str(fit2)
clusplot()
library("fpc")
clusplot(data.whiskies.bodyAndSmoky.scale,fit2$cluster, color = TRUE, shade = TRUE, labels = 2, lines = 0)
plot(data.whiskies.bodyAndSmoky.scale, fit1$cluster)
fit1 = kmeans(data.whiskies.bodyAndSmoky.scale, centers = 6)
plot(data.whiskies.bodyAndSmoky.scale, fit1$cluster)
str(fit1$centers)
str(fit1$cluster)
str(data.whiskies.bodyAndSmoky.scale)
plot(data.whiskies.bodyAndSmoky.scale, color = fit1$cluster)
plot(data.whiskies.bodyAndSmoky.scale, col = fit1$cluster)
plot(data.whiskies.bodyAndSmoky.scale, col = fit2$cluster)
View(data.whiskies.bodyAndSmoky.scale)
ggplot(data.whiskies.bodyAndSmoky.scale, aes(x = Body, y = Smoky, colors = fit1$cluster)) + geom_point()
ggplot(data.whiskies.bodyAndSmoky, aes(x = Body, y = Smoky, colors = fit1$cluster)) + geom_point()
ggplot(data.whiskies.bodyAndSmoky, aes(x = Body, y = Smoky, color = fit1$cluster)) + geom_point()
ggplot(data.whiskies.bodyAndSmoky, aes(x = Body, y = Smoky, color = fit2$cluster)) + geom_point()
fit3 = kmeans(data.whiskies.bodyAndSmoky.scale, centers = 3)
ggplot(data.whiskies.bodyAndSmoky, aes(x = Body, y = Smoky, color = fit3$cluster)) + geom_point()
install.packages("cluster")
install.packages("cluster")
library("cluster")
clusplot(data.whiskies.bodyAndSmoky.scale,fit2$cluster, color = TRUE, shade = TRUE, labels = 2, lines = 0)
clusplot(data.whiskies.bodyAndSmoky,fit2$cluster, color = TRUE, shade = TRUE, labels = 2, lines = 0)
clusplot(data.whiskies.bodyAndSmoky.scale,fit1$cluster, color = TRUE, shade = TRUE, labels = 2, lines = 0)
clusplot(data.whiskies.bodyAndSmoky.scale,fit3$cluster, color = TRUE, shade = TRUE, labels = 2, lines = 0)
data.whiskies.bodyAndSmoky$Cluster = fit3$cluster
ggplot(taste.centers, aes(x = Body, y = Smoky,
label = rownames(taste.centers))) +
geom_point() +
geom_label(size = 10)
ggplot(data.whiskies.bodyAndSmoky, aes(x = Body, y = Smoky, color = fit3$cluster)) + geom_point()
library("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
install.packages("lazyeval")
install.packages("lazyeval")
library("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
install.packages("lazyeval")
install.packages("lazyeval")
library("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
